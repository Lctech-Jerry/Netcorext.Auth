name: Build and Deploy

env:
  IMAGE_PREFIX: "netcorext"

on:
  push:
    branches:
      - main
      - dev
      - stg

  workflow_dispatch:
    inputs:
      force:
        description: 'Force exec'
        type: boolean
        required: true

jobs:
  Detect:
    runs-on: ubuntu-latest
    outputs:
      api: ${{ join(steps.detect.outputs.api) }}
      authentication: ${{ join(steps.detect.outputs.authentication) }}
      authorization: ${{ join(steps.detect.outputs.authorization) }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Detect Change
        id: detect
        run: |
          CHANGE_FILE=`git diff --no-commit-id --name-only HEAD^ | grep -Em 1 'Netcorext.Auth.API' || true`
          if [ ! -z "$CHANGE_FILE" ] || [ ${{ inputs.force }} ]; then
            echo "::set-output name=api::Y"
          else
            echo "::set-output name=api::N"
          fi
          
          CHANGE_FILE=`git diff --no-commit-id --name-only HEAD^ | grep -Em 1 'Netcorext.Auth.Authentication' || true`
          if [ ! -z "$CHANGE_FILE" ] || [ ${{ inputs.force }} ]; then
            echo "::set-output name=authentication::Y"
          else
            echo "::set-output name=authentication::N"
          fi
          
          CHANGE_FILE=`git diff --no-commit-id --name-only HEAD^ | grep -Em 1 'Netcorext.Auth.Authorization' || true`
          if [ ! -z "$CHANGE_FILE" ] || [ ${{ inputs.force }} ]; then
            echo "::set-output name=authorization::Y"
          else
            echo "::set-output name=authorization::N"
          fi
                    
          CHANGE_FILE=`git diff --no-commit-id --name-only HEAD^ | grep -Em 1 'Netcorext.Auth.Core' || true`
          if [ ! -z "$CHANGE_FILE" ]; then
            echo "::set-output name=api::Y"
            echo "::set-output name=authentication::Y"
            echo "::set-output name=authorization::Y"
          fi
  BuildApi:
    needs: Detect
    if: needs.Detect.outputs.api == 'Y'
    runs-on: ubuntu-latest
    steps:
      - id: build
        uses: netcorext/dotnet-build-image-action@dev
        with:
          app: "Netcorext.Auth.API"
          image-prefix: ${{ env.IMAGE_PREFIX }}
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Push to DockerHub
        run: |
          docker push -a ${{ steps.build.outputs.image }}
  BuildAuthentication:
    needs: Detect
    if: needs.Detect.outputs.authentication == 'Y'
    runs-on: ubuntu-latest
    steps:
      - id: build
        uses: netcorext/dotnet-build-image-action@dev
        with:
          app: "Netcorext.Auth.Authentication"
          image-prefix: ${{ env.IMAGE_PREFIX }}
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Push to DockerHub
        run: |
          docker push -a ${{ steps.build.outputs.image }}
  BuildAuthorization:
    needs: Detect
    if: needs.Detect.outputs.authorization == 'Y'
    runs-on: ubuntu-latest
    steps:
      - id: build
        uses: netcorext/dotnet-build-image-action@dev
        with:
          app: "Netcorext.Auth.Authorization"
          image-prefix: ${{ env.IMAGE_PREFIX }}
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Push to DockerHub
        run: |
          docker push -a ${{ steps.build.outputs.image }}